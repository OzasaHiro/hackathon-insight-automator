{
  "success": true,
  "url": "https://uc-berkeley-ai-hackathon-2025.devpost.com/project-gallery",
  "hackathon": {
    "name": "UC Berkeley AI Hackathon 2025: Come join us at the world's largest AI Hackathon hosted by Cal Hacks! - Devpost",
    "description": "",
    "devpost_url": "https://uc-berkeley-ai-hackathon-2025.devpost.com/project-gallery",
    "start_date": null,
    "end_date": null,
    "theme": null,
    "prizes": [],
    "sponsors": [],
    "participant_count": null,
    "submission_count": null,
    "projects": [
      {
        "name": "AuraCode - Elevating Your AI-Assisted Workflow",
        "description": "",
        "devpost_url": "https://devpost.com/software/aura-iuhgkc",
        "project_url": null,
        "tags": [
          "css",
          "gemini",
          "javascript",
          "npm",
          "react",
          "typescript",
          "webgl"
        ],
        "awards": [],
        "members": [],
        "submission_date": null,
        "image_url": null,
        "vote_count": null,
        "comment_count": null
      },
      {
        "name": "PETSOS",
        "description": "**Summary**: PETSOS (featuring PET911) is a voice-activated AI emergency assistant designed for pet owners facing life-threatening situations with their animals. It simulates a 911-style call, providing calm, hands-free, and intelligent guidance to help manage pet health crises.\n\n**Detailed Description**: PETSOS addresses the critical gap in emergency pet care by offering PET911, a voice-activated assistant that guides pet owners through urgent health situations. Built on a modular multi-agent Flask backend, it uses a real-time voice interface powered by Vapi to capture user input. This input is then processed by specialized agents: a Triage Agent for rapid assessment, a Memory Agent for contextual continuity, and a Decision Agent to determine the next steps, with Claude serving as the core reasoning engine. The system integrates OpenStreetMap for location and Textbelt for emergency SMS routing, ensuring comprehensive, hands-free support during stressful moments.\n\n**Problem Addressed**: The absence of an immediate, specialized, and accessible emergency response system for pet health crises, leaving pet owners feeling helpless and unprepared during critical moments. This project addresses the need for instant guidance when a pet's life is on the line and professional veterinary help is not immediately available.\n\n**Target Audience**: Pet owners (dogs, cats, etc.) who lack immediate access to veterinary guidance during emergencies, especially those in rural areas, during off-hours, or in situations requiring hands-free interaction.\n\n**Commercial Potential**: High\n\n**Innovation Level**: High\n\n**Unique Value**: A dedicated, immediate, and hands-free AI-powered '911' service for pet emergencies, offering guided, intelligent support in critical moments where human response might be overwhelmed or delayed, effectively filling a significant gap in pet care.\n\n**Technical Architecture**:\n  - Frontend: A voice-activated interface powered by Vapi, enabling real-time, hands-free interaction with the system.\n  - Backend: A modular multi-agent system built with Flask, orchestrating specialized AI agents (Triage, Memory, Decision) and serving as the central hub for processing voice input and generating responses.\n  - Database: Not explicitly mentioned, but a 'Memory Agent' implies some form of contextual state management or in-memory persistence for conversational continuity.\n  - Deployment: Not specified in the provided project description; likely a local or basic cloud deployment typical for a hackathon.\n  - External_Services: ['Vapi (real-time voice streaming)', 'Anthropic Claude (core AI reasoning engine)', 'OpenStreetMap (location support)', 'Textbelt (emergency SMS routing)']\n\n**Key Features**:\n  - Voice-activated interface for hands-free interaction.\n  - Real-time emergency assessment (Triage Agent).\n  - Contextual memory for continuous conversation (Memory Agent).\n  - Intelligent decision-making for next steps (Decision Agent).\n  - Guidance for life-threatening pet situations.\n  - Simulated 911-style call experience.\n  - Location-based support via OpenStreetMap.\n  - Emergency routing/communication via SMS (Textbelt).\n\n**Technical Complexity**: High\n\n**Scalability**: The modular multi-agent system design and Flask backend offer a foundation for scalability, though real-time voice processing and AI model inference could present bottlenecks under high load, requiring distributed architecture and optimized AI serving.\n\n**Social Impact**: High\n\n**Potential Reach**: Millions of pet owners globally who could benefit from immediate, expert guidance during pet emergencies.\n\n**SWOT Analysis**:\n  **Strengths**:\n    - Addresses a critical, underserved, and highly emotional problem for pet owners.\n    - Innovative application of multi-agent AI and real-time voice technology.\n    - Strong problem-solution fit with a clear value proposition.\n    - High potential for social impact and market adoption.\n    - Demonstrates strong technical capabilities in integrating diverse APIs and managing complex AI interactions.\n  **Weaknesses**:\n    - Reliance on external APIs (Vapi, Claude) introduces dependencies and potential latency.\n    - Accuracy and liability concerns for AI in life-or-death medical scenarios.\n    - User trust in an AI for such critical situations might be a barrier.\n    - Scalability for real-time voice processing at a large scale can be challenging.\n  **Opportunities**:\n    - Vast and growing pet ownership market.\n    - Partnerships with pet industry stakeholders (vets, insurance, pet product companies).\n    - Expansion into broader pet wellness and preventative care services.\n    - Potential for global reach due to universal nature of pet emergencies.\n    - Leveraging advancements in AI and voice technology to continuously improve.\n  **Threats**:\n    - Regulatory hurdles and legal liabilities associated with providing medical guidance.\n    - Competition from established pet care companies or general telemedicine platforms integrating similar features.\n    - Maintaining accuracy and empathy of AI responses across diverse emergency scenarios.\n    - Technical challenges related to real-time processing and API reliability.\n\n**Categories**: Healthtech, AI, Pet Care, Emergency Services, Voice Technology",
        "devpost_url": "https://devpost.com/software/petsos-0iqmaz",
        "project_url": "https://github.com/ashleyvarghesee/petsos",
        "tags": [
          "flask",
          "javascript",
          "postman",
          "python",
          "twilio"
        ],
        "awards": [],
        "members": [],
        "submission_date": null,
        "image_url": null,
        "vote_count": null,
        "comment_count": null
      },
      {
        "name": "TriageAI",
        "description": "**Summary**: TriageAI is a lightweight web application designed to assist healthcare workers in quickly triaging patients. It uses AI, including a vision model, to analyze symptoms and images, providing an urgent level assessment, possible diagnosis, and care advice, especially useful in resource-limited settings.\n\n**Detailed Description**: TriageAI is a full-stack web application that allows users to input symptoms and upload medical images for an AI-generated assessment. The system provides a suggested urgency level, potential diagnosis, and care recommendations, aiming to streamline the triage process in clinics or disaster scenarios lacking extensive infrastructure. Its backend, built with Python and FastAPI, integrates the OpenAI Vision API for image analysis and a rule-based inference system for triage logic. The frontend, developed with Next.js and React, offers a clean user interface for seamless interaction, with Axios handling communication and React hooks managing state.\n\n**Problem Addressed**: The project addresses the significant stress and challenge faced by healthcare workers in quickly and accurately triaging patients, particularly in situations lacking complete hospital infrastructure or continuous staff, such as remote clinics, underserved areas, or disaster scenarios. It aims to automate parts of this critical judgment process.\n\n**Target Audience**: Healthcare workers (nurses, paramedics, clinic staff), first responders, disaster relief organizations, and potentially individuals in remote or underserved communities seeking initial medical guidance.\n\n**Commercial Potential**: High\n\n**Innovation Level**: Medium-High\n\n**Unique Value**: Its uniqueness lies in providing an accessible, lightweight, AI-powered triage tool (including image analysis) specifically tailored for environments without full hospital infrastructure or constant medical staff, reducing stress and improving initial assessment efficiency.\n\n**Technical Architecture**:\n  - Frontend: Built with Next.js and React, featuring a clean UI for symptom entry and image uploads. Communication with the backend is handled via Axios, and application state is managed using React hooks.\n  - Backend: Developed in Python using FastAPI, it contains the core triage logic. It integrates the OpenAI Vision API for image analysis and utilizes a custom 'MedicalTriageAssistant' class for rule-based inference to determine urgency, diagnosis, and advice.\n  - Database: No persistent database was implemented for the hackathon prototype. Future plans include connecting to a real database for patient history and session persistence.\n  - Deployment: The project involved deploying both the frontend and backend components together, implying a standard web application hosting setup, though specific deployment platforms (e.g., cloud providers) were not detailed.\n  - External_Services: ['OpenAI Vision API']\n\n**Key Features**:\n  - Symptom submission by users\n  - Image upload functionality for medical assessment\n  - AI-generated assessment (urgency level, possible diagnosis, care advice)\n  - Vision model processing for image analysis\n  - Python FastAPI backend for core logic\n  - Next.js/React frontend with a clean UI\n  - Rule-based inference for medical triage logic\n  - Multi-route UI for user feedback\n\n**Technical Complexity**: High\n\n**Scalability**: The FastAPI backend is inherently scalable, but current reliance on external API limits (OpenAI) and the absence of a persistent database are immediate considerations for large-scale deployment. The rule-based inference could become complex to manage at extreme scale without more advanced ML models.\n\n**Social Impact**: High\n\n**Potential Reach**: Global, especially in areas with limited medical infrastructure, disaster zones, and remote clinics. It could significantly impact millions by improving access to initial medical assessment.\n\n**SWOT Analysis**:\n  **Strengths**:\n    - Addresses a significant real-world problem in healthcare triage.\n    - Successfully integrates modern AI (vision model) into a functional prototype.\n    - Strong technical foundation with a modern full-stack architecture.\n    - High potential for social impact, especially in underserved areas.\n    - Accessible and user-friendly design concept.\n    - Achieved a complex build in a very short hackathon timeframe.\n  **Weaknesses**:\n    - Lack of persistent data storage (database) in the prototype.\n    - No explicit mention of critical security and privacy measures (e.g., HIPAA compliance).\n    - Reliance on rule-based inference may limit flexibility and accuracy compared to fully data-driven models.\n    - Hackathon-level robustness and error handling.\n    - Potential for AI hallucination or misinterpretation in a sensitive medical context.\n  **Opportunities**:\n    - Large underserved market for lightweight, AI-assisted triage tools.\n    - Potential for further AI model training and specialization (e.g., fine-tuning models on medical datasets).\n    - Integration with existing healthcare infrastructure and telehealth platforms.\n    - Expansion into remote patient monitoring and preventative care.\n  **Threats**:\n    - Strict regulatory hurdles and compliance requirements in healthcare (e.g., FDA clearance as a medical device).\n    - Maintaining user trust, especially given AI's limitations and potential for errors in medical advice.\n    - Data privacy concerns and liability issues related to AI recommendations.\n    - Competition from larger healthcare tech companies with more resources.\n    - Cost and rate limits associated with external AI APIs (like OpenAI).\n\n**Categories**: healthtech, ai, web-application",
        "devpost_url": "https://devpost.com/software/fire-ai-triage",
        "project_url": "https://github.com/AlanLiCodes2/AI-Hackathon-2025",
        "tags": [
          "express.js",
          "flask",
          "mongodb",
          "npm",
          "python",
          "typescript"
        ],
        "awards": [],
        "members": [],
        "submission_date": null,
        "image_url": null,
        "vote_count": null,
        "comment_count": null
      },
      {
        "name": "Trashform",
        "description": "**Summary**: Trashform is an AI-powered application that leverages rigorous image recognition to classify waste as recyclable, compostable, or general. It calculates the environmental impact via carbon footprint analysis and provides users with recommendations for nearby recycling centers, aiming to address the global recycling crisis by enhancing individual motivation.\n\n**Detailed Description**: Trashform is an innovative AI-powered application designed to combat the global recycling crisis by providing users with an intuitive waste management tool. Users can upload images of waste items, which are then analyzed by a sophisticated machine learning model, trained on over 19,000 classified waste images, to precisely categorize them. Beyond classification, the system calculates the environmental impact through carbon footprint analysis and offers practical recommendations for nearby recycling centers or trade-in locations, addressing the critical lack of personal benefits. The project is built with a modern tech stack, utilizing React with Vite and Tailwind CSS for a high-performance, responsive frontend, communicating with a Python-based backend that houses the AI classification model, which achieved an impressive 93.5% accuracy rate.\n\n**Problem Addressed**: The global recycling crisis, exacerbated by widespread lack of public awareness and motivation, leading to poor waste disposal practices, environmental degradation, and the absence of perceived personal benefits for individuals to engage in proper recycling.\n\n**Target Audience**: Individuals and households globally who are interested in environmental sustainability but may lack awareness, motivation, or convenient tools for proper waste disposal and recycling.\n\n**Commercial Potential**: Medium\n\n**Innovation Level**: High\n\n**Unique Value**: Trashform differentiates itself from existing recycling apps by uniquely combining precise AI image recognition with personalized carbon footprint analysis and environmental impact quantification, directly motivating users by showcasing the tangible benefits of proper waste disposal, rather than just providing information.\n\n**Technical Architecture**:\n  - Frontend: Developed using React with Vite for high performance and Tailwind CSS for responsive design, providing an intuitive user interface that enables seamless image upload functionality.\n  - Backend: A Python-based backend infrastructure responsible for processing image uploads, executing the sophisticated machine learning model for waste classification, and performing carbon footprint analysis. It communicates with the frontend via APIs.\n  - Database: Not explicitly mentioned in the project description, but a database would typically be required for storing user data, historical classifications, or location-based information for recycling centers.\n  - Deployment: Not explicitly detailed, but implied to be a web application requiring standard server deployment for the frontend and backend services, potentially including cloud-based infrastructure for scalable ML inference.\n  - External_Services: ['Kaggle (utilized as the dataset source for training the machine learning model)']\n\n**Key Features**:\n  - AI-powered waste image classification (recyclable, compostable, general waste)\n  - Carbon footprint analysis and environmental impact calculation for waste items\n  - Recommendations for nearby recycling centers and trade-in locations\n  - User-friendly image upload functionality (from device or online sources)\n  - Machine learning model with 93.5% waste classification accuracy\n\n**Technical Complexity**: High\n\n**Scalability**: Not explicitly detailed, but the architecture (React frontend, Python backend with ML) is inherently scalable with cloud-based deployments and containerization. Image processing and ML inference would require careful resource management for a large user base.\n\n**Social Impact**: High\n\n**Potential Reach**: Potentially global, as the problem of waste management and the need for improved recycling education are widespread.\n\n**SWOT Analysis**:\n  **Strengths**:\n    - Addresses a significant global environmental problem with an innovative AI-driven solution\n    - Combines practical classification with motivating environmental impact analysis\n    - Achieved high accuracy (93.5%) in core ML functionality within a hackathon timeframe\n    - Utilizes a modern and robust technology stack\n    - Clear vision for future development, including social impact and potential monetization\n    - Focuses on addressing user incentive gaps, a critical psychological barrier to recycling\n  **Weaknesses**:\n    - Encountered significant technical challenges with frontend-backend integration and TensorFlow compatibility\n    - Lack of explicit detail regarding database strategy, deployment environment, and security measures\n    - Scalability considerations for handling a large volume of image processing are not fully elaborated\n  **Opportunities**:\n    - Large and growing global market for sustainable waste management solutions\n    - Potential for strong B2B partnerships with waste management companies and environmental organizations\n    - Expansion into broader educational tools or gamified experiences to increase user engagement\n    - Leveraging collected data (anonymously) for urban planning or waste infrastructure improvements\n  **Threats**:\n    - Competition from existing recycling applications or government-led initiatives that may have greater reach\n    - Challenges in acquiring and maintaining a diverse and extensive dataset for continuous ML model improvement\n    - Ensuring the accuracy and up-to-dateness of carbon footprint calculations across various regions and material types\n    - Potential user privacy concerns related to image uploads if not properly addressed\n\n**Categories**: Environmental Tech, AI/Machine Learning, Waste Management, Sustainable Solutions, Consumer Utility, Green Tech",
        "devpost_url": "https://devpost.com/software/trashform-10j84l",
        "project_url": "https://github.com/derpcube/trash-form",
        "tags": [
          "flask",
          "git",
          "html",
          "javascript",
          "python",
          "react"
        ],
        "awards": [],
        "members": [],
        "submission_date": null,
        "image_url": null,
        "vote_count": null,
        "comment_count": null
      },
      {
        "name": "Farsight.fyi",
        "description": "**Summary**: Farsight.fyi is a hybrid AI-powered web application designed to provide employees, recruiters, and policymakers with foresight into potential mass layoffs. It analyzes public data like WARN filings and news to generate an objective layoff-risk score for companies weeks or months in advance.\n\n**Detailed Description**: Farsight.fyi is a web application that takes a company name as input and performs a multi-stage, real-time analysis to assess its layoff risk. The core of its functionality lies in a hybrid AI system that combines the natural language understanding capabilities of a Large Language Model (LLM) for extracting structured features from unstructured text (like news articles), with the predictive power of a traditional gradient-boosting model to generate a risk score. The frontend is built with React and TypeScript, styled with Tailwind CSS, while the backend likely leverages FastAPI for asynchronous operations. This pipeline aims to transform noisy, diverse public data into actionable, objective insights.\n\n**Problem Addressed**: The problem addressed is the unexpected nature of mass layoffs, which feel like 'lightning bolts' and are 'out-of-the-blue'. Employees lack time to prepare, recruiters miss opportunities, and policymakers react too late. Farsight aims to provide early warning.\n\n**Target Audience**: ['Employees (for personal and career planning)', 'Recruiters (for identifying talent pools and opportunities)', 'Policymakers (for proactive economic planning and intervention)']\n\n**Commercial Potential**: High\n\n**Innovation Level**: High\n\n**Unique Value**: Providing 'foresight instead of hindsight' by surfacing an objective layoff-risk score proactively, leveraging publicly available but disparate information, which is a unique and proactive approach to managing layoff uncertainty for multiple stakeholders.\n\n**Technical Architecture**:\n  - Frontend: Built using React and TypeScript, leveraging Vite for efficient local development. Styling is handled with Tailwind CSS, and UI components are sourced from shadcn/ui, ensuring a modern and responsive user interface.\n  - Backend: Implied to use FastAPI for building responsive, asynchronous web applications. It orchestrates the multi-stage AI analysis, including LLM-based data extraction and gradient-boosting model prediction. It processes company names, fetches relevant data, and computes the layoff risk score.\n  - Database: Not explicitly mentioned, but would likely require a database to store processed data, company information, and potentially historical risk scores or user preferences (e.g., PostgreSQL, MongoDB).\n  - Deployment: Not specified in the provided text. Likely deployed on cloud platforms (e.g., AWS, GCP, Azure) given the use of modern web frameworks and AI models.\n  - External_Services: ['WARN filing databases/APIs', 'News APIs/Scraping (for rumors and articles)', \"External LLM APIs (e.g., OpenAI, Hugging Face models, or self-hosted 'tiny LLMs')\"]\n\n**Key Features**:\n  - Company layoff risk assessment (real-time)\n  - Objective layoff-risk score generation\n  - Multi-stage AI analysis pipeline\n  - Extraction of structured insights from unstructured news data using LLMs\n  - Intuitive web interface for company search\n\n**Technical Complexity**: High\n\n**Scalability**: The 'real-time' multi-stage analysis for each query implies a need for scalable backend services (FastAPI, containerization) and efficient LLM inference. Broader data integration will further increase scaling demands for data ingestion and processing.\n\n**Social Impact**: High\n\n**Potential Reach**: Global, potentially impacting millions of workers and thousands of companies across various industries.\n\n**SWOT Analysis**:\n  **Strengths**:\n    - Addresses a clear and significant real-world problem (unforeseen layoffs).\n    - Innovative hybrid AI approach leveraging both LLMs and traditional ML.\n    - Strong social impact and clear value proposition for multiple stakeholders.\n    - Utilizes a modern and robust technology stack (React, TypeScript, FastAPI).\n    - Focus on 'objective' and 'predictive' analysis.\n  **Weaknesses**:\n    - Reliance on potentially 'noisy' and diverse textual data for LLM extraction could pose accuracy challenges.\n    - Absence of explicit database or data storage strategy in the description.\n    - Scalability of real-time LLM processing could be a challenge for high traffic and cost implications.\n    - Ethical considerations around potential false positives/negatives and their impact on individuals/markets.\n  **Opportunities**:\n    - Vast market potential across employees, recruiters, and policymakers.\n    - Integration with more comprehensive data sources could significantly enhance accuracy and breadth.\n    - Potential for B2B enterprise solutions for HR departments or financial institutions.\n    - Expansion into related predictive analytics for workforce planning and economic forecasting.\n  **Threats**:\n    - Accuracy and reliability of predictions will be under constant scrutiny, requiring continuous model validation.\n    - Competitors with more access to proprietary financial data or internal company metrics.\n    - Legal and ethical implications if predictions lead to adverse actions or market manipulation.\n    - The dynamic nature of economic indicators and news requires continuous model updates and data sourcing.\n\n**Categories**: HR Tech, AI/ML, Data Analytics, Fintech, Business Intelligence",
        "devpost_url": "https://devpost.com/software/farsight-fyi",
        "project_url": "https://github.com/Jam-Cai/layoff-radar",
        "tags": [
          "beautiful-soup",
          "python",
          "react",
          "selenium",
          "typescript"
        ],
        "awards": [],
        "members": [],
        "submission_date": null,
        "image_url": null,
        "vote_count": null,
        "comment_count": null
      }
    ],
    "scraped_at": "2025-06-23 22:50:14.291013"
  },
  "error_message": null,
  "scraped_at": "2025-06-23 22:50:14.291098"
}